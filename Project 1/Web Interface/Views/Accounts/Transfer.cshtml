@model Data_Layer.View_Models.AccountTransferVM

@{
    ViewData["Title"] = "Transfer";
}

<h4>Account</h4>
<h4>Transfer</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Transfer">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="SourceID" class="control-label"></label>
                <select asp-for="SourceID" class="form-control">
                    @foreach (var item in Model.SourceAccounts)
                    {
                    <option value="@item.ID">@item.ID</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label asp-for="DestinationID" class="control-label"></label>
                <select asp-for="DestinationID" class="form-control">
                    @foreach (var item in Model.DestinationAccounts)
                    {
                    <option value="@item.ID">@item.ID</option>
                    }
                </select>
            </div>
            <div>
                @if (ViewData.ContainsKey("ErrorMessage"))
                {
                <p>
                   <span style="color:red">
                       <strong>
                           @ViewData["ErrorMessage"]
                       </strong>
                   </span> 
                </p>
                }
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" />
                <span asp-validation-for="Amount" class="text-danger"></span>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Transfer" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
