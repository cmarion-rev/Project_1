// <auto-generated />
using System;
using Data_Layer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data_Layer.Migrations
{
    [DbContext(typeof(MainDbContext))]
    partial class MainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data_Layer.Data_Objects.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AccountBalance")
                        .HasColumnType("float");

                    b.Property<int>("AccountTransactionStateID")
                        .HasColumnType("int");

                    b.Property<int>("AccountTypeID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<float>("InterestRate")
                        .HasColumnType("real");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("bit");

                    b.Property<DateTime>("MaturityDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("AccountTransactionStateID");

                    b.HasIndex("AccountTypeID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Data_Layer.Data_Objects.AccountTransaction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<int?>("AccountTransactionStateID")
                        .HasColumnType("int");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransactionCode")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AccountID");

                    b.HasIndex("AccountTransactionStateID");

                    b.ToTable("AccountTransactions");
                });

            modelBuilder.Entity("Data_Layer.Data_Objects.AccountTransactionState", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AccountTransactionStates");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Name = "Open Account"
                        },
                        new
                        {
                            ID = 1,
                            Name = "Close Account"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Deposit"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Withdrawal"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Loan Installment"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Overdraft Fee"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Interest Accrued"
                        },
                        new
                        {
                            ID = 7,
                            Name = "Overdraft Protection"
                        },
                        new
                        {
                            ID = 8,
                            Name = "Maturity Not Reached"
                        });
                });

            modelBuilder.Entity("Data_Layer.Data_Objects.AccountType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("AccountTypes");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Name = "Checking"
                        },
                        new
                        {
                            ID = 1,
                            Name = "Business"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Term CD"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Loan"
                        });
                });

            modelBuilder.Entity("Data_Layer.Data_Objects.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StateID")
                        .HasColumnType("int");

                    b.Property<string>("UserIdentity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StateID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Data_Layer.Data_Objects.State", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasColumnType("nvarchar(2)")
                        .HasMaxLength(2);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            ID = -1,
                            Abbreviation = "AL",
                            Name = "Alabama"
                        },
                        new
                        {
                            ID = 1,
                            Abbreviation = "AK",
                            Name = "Alaska"
                        },
                        new
                        {
                            ID = 2,
                            Abbreviation = "AZ",
                            Name = "Arizona"
                        },
                        new
                        {
                            ID = 3,
                            Abbreviation = "AR",
                            Name = "Arkansas"
                        },
                        new
                        {
                            ID = 4,
                            Abbreviation = "CA",
                            Name = "California"
                        },
                        new
                        {
                            ID = 5,
                            Abbreviation = "CO",
                            Name = "Colorado"
                        },
                        new
                        {
                            ID = 6,
                            Abbreviation = "CT",
                            Name = "Connecticut"
                        },
                        new
                        {
                            ID = 7,
                            Abbreviation = "DE",
                            Name = "Delaware"
                        },
                        new
                        {
                            ID = 8,
                            Abbreviation = "FL",
                            Name = "Florida"
                        },
                        new
                        {
                            ID = 9,
                            Abbreviation = "GA",
                            Name = "Georgia"
                        },
                        new
                        {
                            ID = 10,
                            Abbreviation = "HI",
                            Name = "Hawaii"
                        },
                        new
                        {
                            ID = 11,
                            Abbreviation = "ID",
                            Name = "Idaho"
                        },
                        new
                        {
                            ID = 12,
                            Abbreviation = "IL",
                            Name = "Illinois"
                        },
                        new
                        {
                            ID = 13,
                            Abbreviation = "IN",
                            Name = "Indiana"
                        },
                        new
                        {
                            ID = 14,
                            Abbreviation = "IA",
                            Name = "Iowa"
                        },
                        new
                        {
                            ID = 15,
                            Abbreviation = "KS",
                            Name = "Kansas"
                        },
                        new
                        {
                            ID = 16,
                            Abbreviation = "KY",
                            Name = "Kentucky"
                        },
                        new
                        {
                            ID = 17,
                            Abbreviation = "LA",
                            Name = "Louisiana"
                        },
                        new
                        {
                            ID = 18,
                            Abbreviation = "ME",
                            Name = "Maine"
                        },
                        new
                        {
                            ID = 19,
                            Abbreviation = "MD",
                            Name = "Maryland"
                        },
                        new
                        {
                            ID = 20,
                            Abbreviation = "MA",
                            Name = "Massachusetts"
                        },
                        new
                        {
                            ID = 21,
                            Abbreviation = "MI",
                            Name = "Michigan"
                        },
                        new
                        {
                            ID = 22,
                            Abbreviation = "MN",
                            Name = "Minnesota"
                        },
                        new
                        {
                            ID = 23,
                            Abbreviation = "MS",
                            Name = "Mississippi"
                        },
                        new
                        {
                            ID = 24,
                            Abbreviation = "MO",
                            Name = "Missouri"
                        },
                        new
                        {
                            ID = 25,
                            Abbreviation = "MT",
                            Name = "Montana"
                        },
                        new
                        {
                            ID = 26,
                            Abbreviation = "NE",
                            Name = "Nebraska"
                        },
                        new
                        {
                            ID = 27,
                            Abbreviation = "NV",
                            Name = "Nevada"
                        },
                        new
                        {
                            ID = 28,
                            Abbreviation = "NH",
                            Name = "New Hampshire"
                        },
                        new
                        {
                            ID = 29,
                            Abbreviation = "NJ",
                            Name = "New Jersey"
                        },
                        new
                        {
                            ID = 30,
                            Abbreviation = "NM",
                            Name = "New Mexico"
                        },
                        new
                        {
                            ID = 31,
                            Abbreviation = "NY",
                            Name = "New York"
                        },
                        new
                        {
                            ID = 32,
                            Abbreviation = "NC",
                            Name = "North Carolina"
                        },
                        new
                        {
                            ID = 33,
                            Abbreviation = "ND",
                            Name = "North Dakota"
                        },
                        new
                        {
                            ID = 34,
                            Abbreviation = "OH",
                            Name = "Ohio"
                        },
                        new
                        {
                            ID = 35,
                            Abbreviation = "OK",
                            Name = "Oklahoma"
                        },
                        new
                        {
                            ID = 36,
                            Abbreviation = "OR",
                            Name = "Oregon"
                        },
                        new
                        {
                            ID = 37,
                            Abbreviation = "PA",
                            Name = "Pennsylvania"
                        },
                        new
                        {
                            ID = 38,
                            Abbreviation = "RI",
                            Name = "Rhode Island"
                        },
                        new
                        {
                            ID = 39,
                            Abbreviation = "SC",
                            Name = "South Carolina"
                        },
                        new
                        {
                            ID = 40,
                            Abbreviation = "SD",
                            Name = "South Dakota"
                        },
                        new
                        {
                            ID = 41,
                            Abbreviation = "TN",
                            Name = "Tennessee"
                        },
                        new
                        {
                            ID = 42,
                            Abbreviation = "TX",
                            Name = "Texas"
                        },
                        new
                        {
                            ID = 43,
                            Abbreviation = "UT",
                            Name = "Utah"
                        },
                        new
                        {
                            ID = 44,
                            Abbreviation = "VT",
                            Name = "Vermont"
                        },
                        new
                        {
                            ID = 45,
                            Abbreviation = "VA",
                            Name = "Virginia"
                        },
                        new
                        {
                            ID = 46,
                            Abbreviation = "WA",
                            Name = "Washington"
                        },
                        new
                        {
                            ID = 47,
                            Abbreviation = "WV",
                            Name = "West Virginia"
                        },
                        new
                        {
                            ID = 48,
                            Abbreviation = "WI",
                            Name = "Wisconsin"
                        },
                        new
                        {
                            ID = 49,
                            Abbreviation = "WY",
                            Name = "Wyoming"
                        });
                });

            modelBuilder.Entity("Data_Layer.Data_Objects.Account", b =>
                {
                    b.HasOne("Data_Layer.Data_Objects.AccountTransactionState", "AccountTransactionState")
                        .WithMany()
                        .HasForeignKey("AccountTransactionStateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Layer.Data_Objects.AccountType", "AccountType")
                        .WithMany()
                        .HasForeignKey("AccountTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Layer.Data_Objects.Customer", "Customer")
                        .WithMany("Accounts")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data_Layer.Data_Objects.AccountTransaction", b =>
                {
                    b.HasOne("Data_Layer.Data_Objects.Account", "Account")
                        .WithMany("AccountTransactions")
                        .HasForeignKey("AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data_Layer.Data_Objects.AccountTransactionState", "AccountTransactionState")
                        .WithMany()
                        .HasForeignKey("AccountTransactionStateID");
                });

            modelBuilder.Entity("Data_Layer.Data_Objects.Customer", b =>
                {
                    b.HasOne("Data_Layer.Data_Objects.State", "State")
                        .WithMany()
                        .HasForeignKey("StateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
